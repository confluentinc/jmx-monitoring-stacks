version: "2.3"
services:
  zookeeper:
    volumes:
      - $MONITORING_STACK/../shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/zookeeper.yml

  kafka1:
    volumes:
      - $MONITORING_STACK/../shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml

  kafka2:
    volumes:
      - $MONITORING_STACK/../shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml

  streams-demo:
    volumes:
      - $MONITORING_STACK/../shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      JAVA_OPTS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_streams.yml

  connect:
    volumes:
      - $MONITORING_STACK/../shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_connect.yml

  schemaregistry:
    volumes:
      - $MONITORING_STACK/../shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/confluent_schemaregistry.yml

  ksqldb-server:
    volumes:
      - $MONITORING_STACK/../shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      KSQL_OPTS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/confluent_ksql.yml

  restproxy:
    volumes:
      - $MONITORING_STACK/../shared-assets/jmx-exporter/:/usr/share/jmx-exporter
    environment:
      KAFKAREST_OPTS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/confluent_rest.yml

  kafka-lag-exporter:
    image: seglo/kafka-lag-exporter:0.7.1
    container_name: kafka-lag-exporter
    hostname: kafka-lag-exporter
    restart: always
    ports:
      - 9999:9999
    volumes:
      - $MONITORING_STACK/../shared-assets/kafka-lag-exporter:/opt/docker/conf
      - $MONITORING_STACK/assets/security:/etc/kafka/secrets

  node-exporter:
    image: prom/node-exporter:v1.2.2
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^(aufs|proc|nsfs|shm|cgroup|tmpfs|binfmt_misc|debugfs|devpts|fusectl|hugetlbfs|fuse.lxcfs|mqueue|pstore|securityfs|sysfs|autofs|devtmpfs|configfs)"

  elasticsearch:
    cpus: 0.8
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch
    #restart: always
    healthcheck:
      start_period: 10s
      interval: 10s
      retries: 20
      test: curl --user "elastic:es_pass" -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      cluster.name: "elasticsearch-cp-demo"
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      ELASTIC_PASSWORD: es_pass
      xpack.security.enabled: "false"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3

  metricbeat:
    image: docker.elastic.co/beats/metricbeat-oss:7.14.1
    container_name: metricbeat
    restart: always
    volumes:
      - $MONITORING_STACK/assets/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
    command: -e
    environment:
      - "HOST_ELASTICSEARCH=elasticsearch:9200"
      - "HOST_KIBANA=kibana:5601"
    depends_on:
      - elasticsearch
