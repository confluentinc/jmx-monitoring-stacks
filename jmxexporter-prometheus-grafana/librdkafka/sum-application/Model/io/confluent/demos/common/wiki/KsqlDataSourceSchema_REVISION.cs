// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace io.confluent.demos.common.wiki
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class KsqlDataSourceSchema_REVISION : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"KsqlDataSourceSchema_REVISION\",\"namespace\":\"io.confluent" +
				".demos.common.wiki\",\"fields\":[{\"name\":\"NEW\",\"default\":null,\"type\":[\"null\",\"long\"" +
				"]},{\"name\":\"OLD\",\"default\":null,\"type\":[\"null\",\"long\"]}]}");
		private System.Nullable<System.Int64> _NEW;
		private System.Nullable<System.Int64> _OLD;
		public virtual Schema Schema
		{
			get
			{
				return KsqlDataSourceSchema_REVISION._SCHEMA;
			}
		}
		public System.Nullable<System.Int64> NEW
		{
			get
			{
				return this._NEW;
			}
			set
			{
				this._NEW = value;
			}
		}
		public System.Nullable<System.Int64> OLD
		{
			get
			{
				return this._OLD;
			}
			set
			{
				this._OLD = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.NEW;
			case 1: return this.OLD;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.NEW = (System.Nullable<System.Int64>)fieldValue; break;
			case 1: this.OLD = (System.Nullable<System.Int64>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
